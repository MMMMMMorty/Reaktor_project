{"ast":null,"code":"var _jsxFileName = \"/home/morty/Workspace/Reaktor/part1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      //assign interval to a variable to clear it.\n      axios.get('http://localhost:3001/notes').then(response => {\n        console.log('render new data');\n        var tmp = response.data;\n        tmp = tmp.filter(note => {\n          return Date.now() - Date.parse(note.snapshotTimestamp) < 6000;\n        });\n        setNotes(tmp);\n      }).catch(error => {\n        if (error.status == 429) {\n          console.log(\"too many requests for server\");\n        }\n      });\n    }, 2000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const [notes, setNotes] = useState([{\n    serialNumber: '',\n    snapshotTimestamp: '',\n    closestDistance: 0,\n    owner: '',\n    ownerEmail: '',\n    phone: ''\n  }]);\n  const showNotes = notes.map(note => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: note.owner\n      }, \"owner\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: note.phone\n      }, \"phone\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: note.ownerEmail\n      }, \"email\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: note.serialNumber\n      }, \"serialNumber\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", note.snapshotTimestamp]\n      }, \"snapshotTimestamp\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", note.closestDistance]\n      }, \"closestDistance\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 50\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        cellPadding: \"10\",\n        children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n          children: \"The pilots who recently violated the NDZ perimeter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Owner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 111\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 125\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 139\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"serialNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 153\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Last time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 174\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"closestDistance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 192\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 107\n          }, this), showNotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 100\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"GGC7PaNeE1DSdewu+/FlC8Rsx9g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","App","intervalId","setInterval","get","then","response","console","log","tmp","data","filter","note","Date","now","parse","snapshotTimestamp","setNotes","catch","error","status","clearInterval","notes","serialNumber","closestDistance","owner","ownerEmail","phone","showNotes","map"],"sources":["/home/morty/Workspace/Reaktor/part1/src/App.js"],"sourcesContent":["import { useState,  useEffect} from 'react'\nimport './App.css'\nimport axios from 'axios'\n\nconst App = () => {\n  useEffect(() => {\n    const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\n      axios\n      .get('http://localhost:3001/notes')\n      .then(response => {\n        console.log('render new data')\n        var tmp = response.data\n        tmp = tmp.filter(note=>{return((Date.now() - Date.parse(note.snapshotTimestamp)) < 6000)})\n        setNotes(tmp)\n      })\n      .catch(error=>{\n        if(error.status == 429){\n          console.log(\"too many requests for server\")\n        }\n      })\n    }, 2000)\n\n    return () => clearInterval(intervalId);\n\n  }, [])\n\n  const [notes, setNotes] = useState([\n    { serialNumber:'', snapshotTimestamp:'', closestDistance: 0, owner: '', ownerEmail: '' , phone:''}\n  ])\n\n\n  const showNotes = notes.map(note=> {\n                                          return(<tr>\n                                            <td key = \"owner\">{note.owner}</td >\n                                            <td key = \"phone\">{note.phone}</td>\n                                            <td key = \"email\">{note.ownerEmail}</td>\n                                            <td key = \"serialNumber\">{note.serialNumber}</td>\n                                            <td key =\"snapshotTimestamp\"> {note.snapshotTimestamp}</td>\n                                            <td key = \"closestDistance\"> {note.closestDistance}</td></tr>)})\n\n\n\n  return (\n    <div>\n      <h2>Info</h2>\n      <>\n      <table cellPadding=\"10\"><caption>The pilots who recently violated the NDZ perimeter</caption><tbody><tr><td>Owner</td><td>Phone</td><td>Email</td><td>serialNumber</td><td>Last time</td><td>closestDistance</td></tr>{showNotes}</tbody></table>\n      </>\n    </div>\n\n  )\n}\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}